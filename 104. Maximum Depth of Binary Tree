/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    int fun(TreeNode* left, TreeNode* right, int l, int r) {
        int ans=0;
      // if(left==nullptr && right==nullptr)return l;
       if(left==nullptr)ans=l;
       else ans=fun(left->left,left->right,l+1,l+1);
       if(right==nullptr)ans=max(ans,r);
       else ans=max(ans,fun(right->left,right->right,r+1,r+1));
       return ans;

    }

    int maxDepth(TreeNode* root) {
        int ans = 0;
        if (root == nullptr)
            return 0;

        ans = fun(root->left, root->right,1,1);
        return ans;
    }
};
