/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    bool fun(TreeNode* left, TreeNode* right, int tar) {
        bool y = false;
        if (left == nullptr && right == nullptr && tar == 0) {
            return y = true;
        }
        if(left!=nullptr)
        y|=fun(left->left,left->right,tar-(left->val));
        if(right!=nullptr)
        y|=fun(right->left,right->right,tar-right->val);
        return y;
    }

    bool hasPathSum(TreeNode* root, int targetSum) {
        bool y = false;
        if (!root) {
            return 0;
        }
        return fun(root->left,root->right,targetSum-root->val);
        // bool y=fun(root->left,root->right,targetSum-root->val);
    }
};
